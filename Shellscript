#!/bin/bash

# Function to create JSON environment entries
create_env_json() {
  local envs=(${1//,/ })  # Split environments by commas
  local env_json=""
  
  for env in "${envs[@]}"; do
    env_json="${env_json}{
      \"ref\": \"env\":\"${env}\",
      \"type\":\"environment\"
    },"
  done

  # Remove the last comma and return the JSON block
  echo "${env_json%,}"
}

# Input file name
input_file="input.txt"

# Initialize variables for each key
Id=""
version=""
ENVIRONMENT=""
check=""
service=""
endpoint=""

# Read the input file and store key-value pairs
while IFS='=' read -r key value; do
  case "$key" in
    Id) Id="$value" ;;
    version) version="$value" ;;
    ENVIRONMENT) ENVIRONMENT="$value" ;;
    check) check="$value" ;;
    service) service="$value" ;;
    endpoint) endpoint="$value" ;;
  esac
done < "$input_file"

# Prepare the environment JSON if the ENVIRONMENT variable is found
if [ -n "$ENVIRONMENT" ]; then
  env_json=$(create_env_json "$ENVIRONMENT")
fi

# Generate the final JSON output
json_output=$(cat <<EOF
{
  "Id": "$Id",
  "version": "$version",
  "env": [
    $env_json
  ],
  "check": "$check",
  "service": "$service",
  "endpoint": "$endpoint"
}
EOF
)

# Output the JSON to a file
output_file="output.json"
echo "$json_output" > "$output_file"

echo "Generated JSON saved to $output_file"
