import React, { useState } from 'react';

const FileDisplayComponent = ({ files }) => {
  const [openedFile, setOpenedFile] = useState(null);
  const [fileContents, setFileContents] = useState({});

  const fetchFileContent = async (url) => {
    if (fileContents[url]) {
      setOpenedFile(openedFile === url ? null : url); // Toggle visibility if already loaded
      return;
    }

    try {
      const response = await fetch(url);
      const content = await response.text();
      setFileContents((prevContents) => ({ ...prevContents, [url]: content }));
      setOpenedFile(url); // Open the file after fetching
    } catch (error) {
      console.error('Error fetching file content:', error);
    }
  };

  return (
    <div className="container">
      <h2>Download the Files</h2>
      <ul>
        {Array.isArray(files) && files.length > 0 ? (
          files.map((file) => (
            <li key={file.url} className="file-item">
              <div className="file-header">
                <button onClick={() => fetchFileContent(file.url)}>
                  {openedFile === file.url ? 'Hide' : 'Show'} Content for {file.name}
                </button>
                <a href={file.url} download={file.name}>
                  Download {file.name}
                </a>
              </div>

              {openedFile === file.url && (
                <div className="file-content">
                  <pre>{fileContents[file.url] || 'Loading content...'}</pre>
                </div>
              )}
            </li>
          ))
        ) : (
          <p>No files available to download.</p>
        )}
      </ul>
    </div>
  );
};

export default FileDisplayComponent;







* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
}

.container {
  padding: 20px;
  margin-top: 10px;
}

ul {
  list-style-type: none;
  padding: 0;
}

.file-item {
  border: 1px solid #ddd;
  margin-bottom: 15px;
  padding: 10px;
  border-radius: 5px;
}

.file-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

button {
  padding: 8px 12px;
  cursor: pointer;
  border: 1px solid #ddd;
  border-radius: 4px;
  background-color: #f0f0f0;
}

button:hover {
  background-color: #e0e0e0;
}

a {
  text-decoration: none;
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  background-color: #f0f0f0;
}

a:hover {
  background-color: #e0e0e0;
}

.file-content {
  margin-top: 10px;
  padding: 10px;
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 4px;
  white-space: pre-wrap;
  word-wrap: break-word;
}
