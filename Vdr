
'use client';

import { useState } from 'react';

export default function VDRPage() {
  const [sbomFile, setSbomFile] = useState(null);
  const [vulnFile, setVulnFile] = useState(null);
  const [vdrData, setVdrData] = useState(null);
  const [error, setError] = useState('');

  const handleFileChange = (e, setFile) => {
    const file = e.target.files[0];
    if (file && file.type === 'application/json') {
      setFile(file);
      setError('');
    } else {
      setError('Please upload valid JSON files.');
    }
  };

  const generateVDR = async () => {
    try {
      const sbomContent = await sbomFile.text();
      const vulnContent = await vulnFile.text();

      const sbomJson = JSON.parse(sbomContent);
      const vulnJson = JSON.parse(vulnContent);

      const vdr = {
        bomFormat: 'CycloneDX',
        specVersion: '1.4',
        version: 1,
        metadata: sbomJson.metadata,
        components: sbomJson.components,
        vulnerabilities: vulnJson.vulnerabilities
      };

      setVdrData(vdr);
    } catch (err) {
      console.error('Error:', err);
      setError('Invalid JSON structure. Please check your files.');
    }
  };

  return (
    <div>
      <input type="file" onChange={(e) => handleFileChange(e, setSbomFile)} />
      <input type="file" onChange={(e) => handleFileChange(e, setVulnFile)} />
      <button onClick={generateVDR}>Generate VDR</button>

      {vdrData && <pre>{JSON.stringify(vdrData, null, 2)}</pre>}
    </div>
  );
}
