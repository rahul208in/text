
The error occurs because the JSON file generated by k6 is not in a valid JSON format. k6 outputs JSON data in a **line-delimited JSON (JSONL)** format, where each line is a separate JSON object. To process this file, you need to read it line by line and parse each JSON object individually.

Hereâ€™s how you can fix the issue and generate an HTML report:

---

### Updated Node.js Script for JSONL Files
This script reads the JSONL file line by line, extracts the relevant metrics, and generates an HTML report.

```javascript
const fs = require('fs');
const path = require('path');

// Read the JSONL file
const jsonlFilePath = path.join(__dirname, 'test_results.json');
const jsonlData = fs.readFileSync(jsonlFilePath, 'utf8');

// Parse JSONL data
const metrics = {
  http_reqs: { count: 0 },
  http_req_duration: { avg: 0, p95: 0 },
  http_req_failed: { rate: 0 },
};

jsonlData.split('\n').forEach((line) => {
  if (line.trim()) {
    const entry = JSON.parse(line);
    if (entry.metric === 'http_reqs') {
      metrics.http_reqs.count += 1;
    } else if (entry.metric === 'http_req_duration') {
      metrics.http_req_duration.avg = entry.data.value;
    } else if (entry.metric === 'http_req_duration{quantile:0.95}') {
      metrics.http_req_duration.p95 = entry.data.value;
    } else if (entry.metric === 'http_req_failed') {
      metrics.http_req_failed.rate = entry.data.value;
    }
  }
});

// Generate HTML report
const htmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>k6 Load Test Report</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    h1 { color: #333; }
    table { width: 100%; border-collapse: collapse; margin-top: 20px; }
    th, td { padding: 10px; border: 1px solid #ddd; text-align: left; }
    th { background-color: #f4f4f4; }
  </style>
</head>
<body>
  <h1>k6 Load Test Report</h1>
  <table>
    <tr>
      <th>Metric</th>
      <th>Value</th>
    </tr>
    <tr>
      <td>Total Requests</td>
      <td>${metrics.http_reqs.count}</td>
    </tr>
    <tr>
      <td>Average Response Time</td>
      <td>${metrics.http_req_duration.avg.toFixed(2)} ms</td>
    </tr>
    <tr>
      <td>95th Percentile Response Time</td>
      <td>${metrics.http_req_duration.p95.toFixed(2)} ms</td>
    </tr>
    <tr>
      <td>Error Rate</td>
      <td>${(metrics.http_req_failed.rate * 100).toFixed(2)}%</td>
    </tr>
  </table>
</body>
</html>
`;

// Save the HTML report
const htmlFilePath = path.join(__dirname, 'test_report.html');
fs.writeFileSync(htmlFilePath, htmlContent);
console.log(`HTML report generated: ${htmlFilePath}`);
```

---

### Steps to Use the Script
1. Run your k6 test and export the results to a JSON file:
   ```bash
   k6 run --out json=test_results.json load-test.js
   ```
2. Save the above Node.js script as `generate-report.js`.
3. Run the script to generate the HTML report:
   ```bash
   node generate-report.js
   ```
4. Open the generated `test_report.html` file in your browser.

---

### Explanation of the Script
- **JSONL Parsing**: The script reads the JSONL file line by line and parses each JSON object.
- **Metrics Extraction**: It extracts key metrics like total requests, average response time, 95th percentile response time, and error rate.
- **HTML Generation**: It generates a clean and human-friendly HTML report with a table displaying the metrics.

---

### Example Output
The HTML report will look like this:

| Metric                        | Value          |
|-------------------------------|----------------|
| Total Requests                | 1000           |
| Average Response Time         | 150.23 ms      |
| 95th Percentile Response Time | 300.45 ms      |
| Error Rate                    | 0.50%          |

---

Let me know if you need further assistance!
